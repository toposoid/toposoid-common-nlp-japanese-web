name: Test And Build
on:
  push:
    branches:
      - feature
  workflow_dispatch:
env:
  PJ_ACTOR: toposoid
  PJ_REPO: toposoid-common-nlp-japanese-web
  PJ_BRANCH: feature
  PJ_VERSION: 0.6-SNAPSHOT
jobs:
  unit-test_toposoid-common-nlp-japanese-web:
    runs-on: self-hosted
    steps:
      - name: Clone ${{ env.PJ_REPO }}
        uses: actions/checkout@v3
        with:
            repository: ${{ env.PJ_ACTOR }}/${{ env.PJ_REPO }}
      - name: Execute tests
        run: |
            cd ${GITHUB_WORKSPACE} && cd ../
            cd ./${{ env.PJ_REPO }}
            docker rm --force $(docker ps -a -q) > /dev/null 2>&1 && :
            docker rmi --force ${{ env.PJ_REPO }}:${{ env.PJ_VERSION }} > /dev/null 2>&1 && :
            docker rmi --force toposoid/${{ env.PJ_REPO }}:${{ env.PJ_VERSION }} > /dev/null 2>&1 && :
            docker rmi --force toposoid/${{ env.PJ_REPO }}:${{ env.PJ_VERSION }}-lowspec > /dev/null 2>&1 && :
            docker images 
            docker system prune -f
            docker volume prune -f 
            sed -i -e "s/###SPEC_LEVEL###/-lowspec/g" Dockerfile-workflow          
            docker build --build-arg TARGET_BRANCH=${{ env.PJ_BRANCH }} --build-arg SPEC_LEVEL=-lowspec --build-arg SENTENCE_TRANSFORMER_MODEL=paraphrase-multilingual-MiniLM-L12-v2 --build-arg VECTOR_MODEL=90 --tag ${{ env.PJ_REPO }}:${{ env.PJ_VERSION }} -f Dockerfile-workflow .
            docker compose -f docker-compose-workflow.yml up -d
            docker compose -f docker-compose-workflow.yml exec -T ${{ env.PJ_REPO }} bash -c "cd ${{ env.PJ_REPO }} && pytest"
            docker rm --force $(docker ps -a -q) > /dev/null 2>&1 && :
            docker rmi --force ${{ env.PJ_REPO }}:${{ env.PJ_VERSION }}
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          images: toposoid/${{ env.PJ_REPO }}:${{ env.PJ_VERSION }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build And Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: toposoid/${{ env.PJ_REPO }}:${{ env.PJ_VERSION }}
          build-args: |
            TARGET_BRANCH=${{ env.PJ_BRANCH }}
            SENTENCE_TRANSFORMER_MODEL=paraphrase-multilingual-mpnet-base-v2
            VECTOR_MODEL=15
      - name: Build And Push Docker Image For Test
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-lowspec
          push: true
          tags: toposoid/${{ env.PJ_REPO }}:${{ env.PJ_VERSION }}-lowspec
          build-args: |
            TARGET_BRANCH=${{ env.PJ_BRANCH }}
            SENTENCE_TRANSFORMER_MODEL=paraphrase-multilingual-MiniLM-L12-v2
            VECTOR_MODEL=90
